{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["query","Blog","render","display_posts","_","orderBy","getPages","this","props","pageContext","pages","className","get","map","post","post_idx","key","to","safePrefix","src","alt","rel","dateTime","moment","strftime","React","Component"],"mappings":"2QAUO,IAAMA,EAAK,aAQGC,E,gLACjBC,OAAA,WACI,IAAIC,EAAgBC,IAAEC,QAAQC,YAASC,KAAKC,MAAMC,YAAYC,MAAO,UAAW,mBAAoB,QACpG,OACI,kBAAC,IAAWH,KAAKC,MACf,4BAAQG,UAAU,sBAChB,4BAAKP,IAAEQ,IAAIL,KAAKC,MAAO,gCAAiC,QAE1D,yBAAKG,UAAU,aACb,yBAAKA,UAAU,oBACZP,IAAES,IAAIV,GAAe,SAACW,EAAMC,GAAP,OACtB,6BAASC,IAAKD,EAAUJ,UAAU,kBAChC,yBAAKA,UAAU,eACZP,IAAEQ,IAAIE,EAAM,6BAA8B,OAC3C,kBAAC,IAAD,CAAMH,UAAU,iBAAiBM,GAAIC,YAAWd,IAAEQ,IAAIE,EAAM,MAAO,QACjE,yBAAKK,IAAKD,YAAWd,IAAEQ,IAAIE,EAAM,6BAA8B,OAAQM,IAAKhB,IAAEQ,IAAIE,EAAM,oBAAqB,SAG/G,4BAAQH,UAAU,eAChB,wBAAIA,UAAU,cAAa,kBAAC,IAAD,CAAMM,GAAIC,YAAWd,IAAEQ,IAAIE,EAAM,MAAO,OAAQO,IAAI,YAAYjB,IAAEQ,IAAIE,EAAM,oBAAqB,SAE7HV,IAAEQ,IAAIE,EAAM,sBAAuB,OACpC,yBAAKH,UAAU,gBACb,2BAAIP,IAAEQ,IAAIE,EAAM,sBAAuB,QAGzC,4BAAQH,UAAU,aAChB,0BAAMA,UAAU,YACdW,SAAUC,IAAOnB,IAAEQ,IAAIE,EAAM,mBAAoB,OAAOU,SAAS,mBAAoBD,IAAOnB,IAAEQ,IAAIE,EAAM,mBAAoB,OAAOU,SAAS,wB,GA5BpIC,IAAMC","file":"component---src-templates-blog-js-c9961a0df578d930c782.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport {getPages, Link, safePrefix} from '../utils';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Blog extends React.Component {\n    render() {\n        let display_posts = _.orderBy(getPages(this.props.pageContext.pages, '/posts'), 'frontmatter.date', 'desc');\n        return (\n            <Layout {...this.props}>\n              <header className=\"screen-reader-text\">\n                <h1>{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n              </header>\n              <div className=\"post-feed\">\n                <div className=\"post-feed-inside\">\n                  {_.map(display_posts, (post, post_idx) => (\n                  <article key={post_idx} className=\"post post-card\">\n                    <div className=\"post-inside\">\n                      {_.get(post, 'frontmatter.thumb_img_path', null) && (\n                      <Link className=\"post-thumbnail\" to={safePrefix(_.get(post, 'url', null))}>\n                        <img src={safePrefix(_.get(post, 'frontmatter.thumb_img_path', null))} alt={_.get(post, 'frontmatter.title', null)} />\n                      </Link>\n                      )}\n                      <header className=\"post-header\">\n                        <h2 className=\"post-title\"><Link to={safePrefix(_.get(post, 'url', null))} rel=\"bookmark\">{_.get(post, 'frontmatter.title', null)}</Link></h2>\n                      </header>\n                      {_.get(post, 'frontmatter.excerpt', null) && (\n                      <div className=\"post-content\">\n                        <p>{_.get(post, 'frontmatter.excerpt', null)}</p>\n                      </div>\n                      )}\n                      <footer className=\"post-meta\">\n                        <time className=\"published\"\n                          dateTime={moment(_.get(post, 'frontmatter.date', null)).strftime('%Y-%m-%d %H:%M')}>{moment(_.get(post, 'frontmatter.date', null)).strftime('%B %d, %Y')}</time>\n                      </footer>\n                    </div>\n                  </article>\n                  ))}\n                </div>\n              </div>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}